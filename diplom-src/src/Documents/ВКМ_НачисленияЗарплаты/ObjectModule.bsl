
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДобавитьЗаписиПоОкладу();
	
	ДобавитьЗаписиПоОтпуску();
	
	СформироватьСторноЗаписи();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
	РассчитатьОклад();
	
	РассчитатьОтпуск();
	
	Движения.ВКМ_Удержания.Записать();
	
	РассчитатьВзаиморасчетыССотрудниками();
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры

Процедура РассчитатьВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	СУММА(ВКМ_ОсновныеНачисления.ВКМ_Результат) КАК ОсновныеНачисления,
	|	СУММА(0) КАК ДополнительныеНачисления,
	|	СУММА(0) КАК Удержания
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	СУММА(0),
	|	СУММА(ВКМ_ДополнительныеНачисления.ВКМ_Результат),
	|	СУММА(0)
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_Удержания.ВКМ_Сотрудник КАК Сотрудник,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ВКМ_Удержания.ВКМ_Результат)
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_Удержания.ВКМ_Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.Сотрудник,
	|	СУММА(ВТ_Данные.ОсновныеНачисления) КАК ОсновныеНачисления,
	|	СУММА(ВТ_Данные.ДополнительныеНачисления) КАК ДополнительныеНачисления,
	|	СУММА(ВТ_Данные.Удержания) КАК Удержания
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.Сотрудник";

	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВКМ_Сотрудник = Выборка.Сотрудник;
		Движение.ВКМ_Сумма = Выборка.ОсновныеНачисления + Выборка.ДополнительныеНачисления - Выборка.Удержания;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиПоОкладу()
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	НайденныеСтроки = ВКМ_Начисления.НайтиСтроки(Отбор);
	
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	МинимальнаяДатаНачалаОклада = НайденныеСтроки[0].ВКМ_ДатаНачала;
	МаксимальнаяДатаОкончанияОклада = НайденныеСтроки[0].ВКМ_ДатаОкончания;
	
	Для Сч = 1 По НайденныеСтроки.ВГраница() Цикл
		
		Строка = НайденныеСтроки[Сч];
		
		Если Строка.ВКМ_ДатаНачала < МинимальнаяДатаНачалаОклада Тогда
			МинимальнаяДатаНачалаОклада = Строка.ВКМ_ДатаНачала
		КонецЕсли;
		
		Если Строка.ВКМ_ДатаОкончания > МаксимальнаяДатаОкончанияОклада Тогда
			МаксимальнаяДатаОкончанияОклада = Строка.ВКМ_ДатаОкончания
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_Начисления КАК ВКМ_НачисленияЗарплатыВКМ_Начисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыВКМ_Начисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета = &ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад
	|ПОМЕСТИТЬ ВТ_ИзмененияОклада
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&НачалоПериода, ВКМ_Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудников.Период,
	|	ВКМ_УсловияОплатыСотрудников.ВКМ_Сотрудник,
	|	ВКМ_УсловияОплатыСотрудников.ВКМ_Оклад
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|ГДЕ
	|	ВКМ_УсловияОплатыСотрудников.ВКМ_Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)
	|	И ВКМ_УсловияОплатыСотрудников.Период > &НачалоПериода
	|	И ВКМ_УсловияОплатыСотрудников.Период <= &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыНачала.Период КАК ДатаНачала,
	|	ДатыНачала.ВКМ_Сотрудник КАК Сотрудник,
	|	ДатыНачала.ВКМ_Оклад КАК Оклад,
	|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(МИНИМУМ(ДатыОкончания.Период), СЕКУНДА, -1), &КонецПериода) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
	|ИЗ
	|	ВТ_ИзмененияОклада КАК ДатыНачала
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияОклада КАК ДатыОкончания
	|		ПО ДатыНачала.ВКМ_Сотрудник = ДатыОкончания.ВКМ_Сотрудник
	|		И ДатыНачала.Период < ДатыОкончания.Период
	|СГРУППИРОВАТЬ ПО
	|	ДатыНачала.Период,
	|	ДатыНачала.ВКМ_Сотрудник,
	|	ДатыНачала.ВКМ_Оклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.Сотрудник КАК ВКМ_Сотрудник,
	|	ВТ_ДанныеДокумента.ВидРасчета КАК ВКМ_ВидРасчета,
	|	ВТ_ДанныеДокумента.ГрафикРаботы КАК ВКМ_ГрафикРаботы,
	|	ВТ_ИнтервалыОклада.Оклад КАК ВКМ_Показатель,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДокумента.ДатаНачала > ВТ_ИнтервалыОклада.ДатаНачала
	|			ТОГДА ВТ_ДанныеДокумента.ДатаНачала
	|		ИНАЧЕ ВТ_ИнтервалыОклада.ДатаНачала
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДокумента.ДатаОкончания < ВТ_ИнтервалыОклада.ДатаОкончания
	|			ТОГДА ВТ_ДанныеДокумента.ДатаОкончания
	|		ИНАЧЕ ВТ_ИнтервалыОклада.ДатаОкончания
	|	КОНЕЦ КАК ПериодДействияКонец
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
	|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
	|		И ВТ_ДанныеДокумента.ДатаНачала < ВТ_ИнтервалыОклада.ДатаОкончания
	|		И ВТ_ИнтервалыОклада.ДатаНачала < ВТ_ДанныеДокумента.ДатаОкончания";
	
	Запрос.УстановитьПараметр("НачалоПериода", МинимальнаяДатаНачалаОклада);
	Запрос.УстановитьПараметр("КонецПериода", МаксимальнаяДатаОкончанияОклада);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ВидРасчета = Выборка.ВКМ_ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
	КонецЦикла;
	
	Движения.Записать();
	
КонецПроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия/8, 0) КАК Отработано,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеПериодДействия/8, 0) КАК НеобходимоОтработать
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
		|	И ВидРасчета = &ВидРасчетаОклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
		
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
		
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Движение.ВКМ_КоличествоДней = Выборка.Отработано;
			
		Если Выборка.НеобходимоОтработать <> 0 Тогда
			Движение.ВКМ_Результат = Движение.ВКМ_Показатель/Выборка.НеобходимоОтработать * Выборка.Отработано;
		КонецЕсли;
		
		Если Движение.Сторно Тогда
			Движение.ВКМ_Результат = -Движение.ВКМ_Результат;
			Движение.ВКМ_КоличествоДней = -Движение.ВКМ_КоличествоДней;
		КонецЕсли;
			
		РассчитатьНДФЛ(Движение.ВКМ_Результат, Движение.ВКМ_Сотрудник);

	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура ДобавитьЗаписиПоОтпуску()
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	НайденныеСтроки = ВКМ_Начисления.НайтиСтроки(Отбор);
	
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
	
		БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -12));
		БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -1));
	
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ВКМ_ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ВКМ_ДатаОкончания;
		Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВКМ_ГрафикРаботы = Строка.ВКМ_ГрафикРаботы;
		Движение.БазовыйПериодНачало = БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = БазовыйПериодКонец;
		
	КонецЦикла;
	
	Движения.Записать();
	
	//РассчитатьОтпуск(Ссылка, Движения);
	
КонецПроцедуры

Процедура РассчитатьОтпуск() 
	
	Движения.ВКМ_ОтпускаСотрудников.Записывать = Истина;
	
	Сутки = 60*60*24;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисления.ВКМ_КоличествоДней КАК КоличествоДнейОтпуска,
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.ПериодДействияКонец,
	|	ВКМ_ОсновныеНачисления.ПериодДействияНачало
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпуск
	|	И ВКМ_ОсновныеНачисления.Регистратор = &Регистратор";
	
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
			
			ДвижениеОтпуск = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
			
			КоличествоДнейОтпуска = (НачалоДня(Выборка.ПериодДействияКонец)-НачалоДня(Выборка.ПериодДействияНачало)) / Сутки + 1;
			ДвижениеОтпуск.ВКМ_КоличествоДней = КоличествоДнейОтпуска;
			
			Движение = Движения.ВКМ_ОтпускаСотрудников.Добавить();
			Движение.Период = ДвижениеОтпуск.ПериодДействия;
			Движение.Регистратор = ДвижениеОтпуск.Регистратор;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.ВКМ_Сотрудник = ДвижениеОтпуск.ВКМ_Сотрудник;
			Движение.ВКМ_КоличествоДнейОтпускаФакт = КоличествоДнейОтпуска;

	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
	РассчитатьСуммуОтпускаКВыплате();
	
КонецПроцедуры

Процедура СформироватьСторноЗаписи()
	
	НаборЗаписей = РегистрыРасчета.ВКМ_ОсновныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка, Истина);
	НаборЗаписей.Прочитать();
	
	СторноЗаписи = НаборЗаписей.ПолучитьДополнение();
	
	Для Каждого Строка Из СторноЗаписи Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Строка.ПериодДействияКонецСторно;
		Движение.Сторно = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьНДФЛ(СуммаКРасчетуНДФЛ, Сотрудник)
	
	НДФЛ = 13;
	
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	Движение = Движения.ВКМ_Удержания.Добавить();
	Движение.ПериодРегистрации = Дата;
	Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
	Движение.ВКМ_Сотрудник = Сотрудник;
	СуммаНДФЛ = СуммаКРасчетуНДФЛ * НДФЛ / 100;
	Движение.ВКМ_Результат = СуммаНДФЛ;
	
КонецПроцедуры

Процедура РассчитатьСуммуОтпускаКВыплате()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	СУММА(ВложенныйЗапрос.ВКМ_Сумма) КАК НачисленнаяСумма
	|ПОМЕСТИТЬ ВТ_СуммаНачислений
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВКМ_ВзаиморасчетыССотрудниками.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|			СУММА(ВКМ_ВзаиморасчетыССотрудниками.ВКМ_Сумма) КАК ВКМ_Сумма,
	|			ВКМ_ВзаиморасчетыССотрудниками.Период КАК Период
	|		ИЗ
	|			РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками КАК ВКМ_ВзаиморасчетыССотрудниками
	|		ГДЕ
	|			ВКМ_ВзаиморасчетыССотрудниками.ВидДвижения = &ВидДвиженияПриход
	|		СГРУППИРОВАТЬ ПО
	|			ВКМ_ВзаиморасчетыССотрудниками.ВКМ_Сотрудник,
	|			ВКМ_ВзаиморасчетыССотрудниками.Период) КАК ВложенныйЗапрос
	|		ПО (ВКМ_ОсновныеНачисления.ВКМ_Сотрудник = ВложенныйЗапрос.ВКМ_Сотрудник)
	|		И (ВложенныйЗапрос.Период
	|			МЕЖДУ ВКМ_ОсновныеНачисления.БазовыйПериодНачало И ВКМ_ОсновныеНачисления.БазовыйПериодКонец)
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпуск
	|	И ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодКонец,
	|	ВКМ_ОсновныеНачисления.ПериодДействия,
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник,
	|	ВКМ_ОсновныеНачисления.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	СУММА(ВКМ_ОсновныеНачисления.ВКМ_КоличествоДней) КАК КоличествоДнейОтпуска,
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец
	|ПОМЕСТИТЬ ВТ_КоличествоДнейОтпуска
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпуск
	|	И ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник,
	|	ВКМ_ОсновныеНачисления.НомерСтроки,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодКонец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	СУММА(ВКМ_ОсновныеНачисления.ВКМ_КоличествоДней) КАК КоличествоРабочихДней,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТ_КоличествоДнейОтпуска.КоличествоДнейОтпуска КАК КоличествоДнейОтпуска
	|ПОМЕСТИТЬ ВТ_КоличествоДнейОбщее
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_КоличествоДнейОтпуска КАК ВТ_КоличествоДнейОтпуска
	|		ПО ВКМ_ОсновныеНачисления.ВКМ_Сотрудник = ВТ_КоличествоДнейОтпуска.ВКМ_Сотрудник
	|		И (ВКМ_ОсновныеНачисления.ПериодДействия
	|			МЕЖДУ ВТ_КоличествоДнейОтпуска.БазовыйПериодНачало И ВТ_КоличествоДнейОтпуска.БазовыйПериодКонец)
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОклад
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисления.БазовыйПериодКонец,
	|	ВТ_КоличествоДнейОтпуска.КоличествоДнейОтпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СуммаНачислений.НомерСтроки КАК НомерСтроки,
	|	ВТ_СуммаНачислений.Сотрудник КАК Сотрудник,
	|	ВТ_СуммаНачислений.НачисленнаяСумма КАК НачисленнаяСумма,
	|	СУММА(ВТ_КоличествоДнейОбщее.КоличествоРабочихДней) КАК КоличествоРабочихДней,
	|	МАКСИМУМ(ВТ_КоличествоДнейОбщее.КоличествоДнейОтпуска) КАК КоличествоДнейОтпуска
	|ИЗ
	|	ВТ_СуммаНачислений КАК ВТ_СуммаНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоДнейОбщее КАК ВТ_КоличествоДнейОбщее
	|		ПО (ВТ_СуммаНачислений.Сотрудник = ВТ_КоличествоДнейОбщее.Сотрудник)
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СуммаНачислений.НомерСтроки,
	|	ВТ_СуммаНачислений.Сотрудник,
	|	ВТ_СуммаНачислений.НачисленнаяСумма";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		ДвижениеОтпуск = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		ДвижениеОтпуск.ВКМ_Результат = (Выборка.НачисленнаяСумма / Выборка.КоличествоРабочихДней) * Выборка.КоличествоДнейОтпуска;
		
		РассчитатьНДФЛ(ДвижениеОтпуск.ВКМ_Результат, ДвижениеОтпуск.ВКМ_Сотрудник);
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Функция ПолучитьДанныеДляРасчетаОтпуска()
	
	МассивДанныеДляРасчета = Новый Массив();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.ВКМ_КоличествоДней КАК КоличествоОтработанныхДней
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОклад
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник,
	|	ВКМ_ОсновныеНачисления.ВКМ_КоличествоДней
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ВКМ_ОсновныеНачисления.с) >= &НачалоПериода
	|	И МАКСИМУМ(ВКМ_ОсновныеНачисления.ПериодДействия) >= &ПериодДействия2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("НачалоПериода", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ДанныеДляРасчета = Новый Структура;
		ДанныеДляРасчета.Вставить("Сотрудник", Выборка.Сотрудник);
		//ДанныеДляРасчета.Вставить("СуммаЗаГод", );
		ДанныеДляРасчета.Вставить("КоличествоРабочихДней", Выборка.КоличествоОтработанныхДней);
		МассивДанныеДляРасчета.Добавить(ДанныеДляРасчета);
	
	КонецЦикла;
	
	Возврат МассивДанныеДляРасчета;
	
КонецФункции
