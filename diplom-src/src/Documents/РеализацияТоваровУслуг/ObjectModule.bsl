
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//Доработка ЩукинаЕ.Д. 
	//Начало Добавление движений по константам из табличной части Услуги 
	//в регистр ВКМ_ВыполненныеКлиентуРаботы
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		
		Если ТекСтрокаУслуги.Номенклатура = НоменклатураАбонентскаяПлата ИЛИ ТекСтрокаУслуги.Номенклатура = НоменклатураРаботыСпециалиста Тогда
		
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Дата;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.ВКМ_Клиент = Контрагент;
			Движение.ВКМ_Договор = Договор;
			Движение.ВКМ_КоличествоЧасов = ТекСтрокаУслуги.Количество;
			Движение.ВКМ_СуммаКОплате = ТекСтрокаУслуги.Сумма;
		
		Иначе
			Продолжить;	
		КонецЕсли;
		
	КонецЦикла;
	
	//Доработка ЩукинаЕ.Д. 
	//Конец Добавление движений по константам из табличной части Услуги 
	//в регистр ВКМ_ВыполненныеКлиентуРаботы

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

//Начало Доработка Щукина Е.Д.
//Если в документе Реализации товаров и услуг выбран договор с видом абонентская плата, 
//то необходимо реализовать возможность автозаполнения такого документа суммой ежемесячной 
//абонентской платы и суммой за выполненные в течения месяца работы по данным документов 
//Обслуживание клиентов

Процедура ВыполнитьАвтозаполнение(НачалоПериода, КонецПериода, Контрагент, Договор) Экспорт
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НЕ ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) ИЛИ НЕ ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		Сообщить("Не возможно получить номенклатуру из константы! Проверьте заполнение констант!");	
		Возврат;
	КонецЕсли;
	
	Услуги.Очистить();
	
	Если Договор.ВКМ_АбонентскаяПлата <> 0 Тогда
		НоваяСтрокаТаблицы = Услуги.Добавить();
		НоваяСтрокаТаблицы.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрокаТаблицы.Количество = 1;
		НоваяСтрокаТаблицы.Цена = Договор.ВКМ_АбонентскаяПлата;
		НоваяСтрокаТаблицы.Сумма = Договор.ВКМ_АбонентскаяПлата;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	-ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.ВКМ_КоличествоЧасовОборот КАК КоличествоЧасов,
	|	-ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.ВКМ_СуммаКОплатеОборот КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.ОстаткиИОбороты(&НачалоПериода, &КонецПериода,,, ВКМ_Клиент = &Клиент
	|	И ВКМ_Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = Услуги.Добавить();
		НоваяСтрокаТаблицы.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрокаТаблицы.Количество = Выборка.КоличествоЧасов;
		НоваяСтрокаТаблицы.Цена = Выборка.СуммаКОплате / Выборка.КоличествоЧасов;
		НоваяСтрокаТаблицы.Сумма = Выборка.СуммаКОплате;
	КонецЦикла;
	
КонецПроцедуры

//Конец Доработка Щукина Е.Д.
//Если в документе Реализации товаров и услуг выбран договор с видом абонентская плата, 
//то необходимо реализовать возможность автозаполнения такого документа суммой ежемесячной 
//абонентской платы и суммой за выполненные в течения месяца работы по данным документов 
//Обслуживание клиентов

#КонецОбласти

#КонецЕсли
