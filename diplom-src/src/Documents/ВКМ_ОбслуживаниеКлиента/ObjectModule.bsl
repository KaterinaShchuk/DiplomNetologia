
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)

	НайденнаяЗапись = ПроверкаУсловийОплатыСотрудников(Дата, ВКМ_Специалист);
	
	НДФЛ = 13;
	
	Если НЕ НайденнаяЗапись.ЗаписьЕсть Тогда
		Сообщение = Новый СообщениеПользователю();
		ТекстСообщения = СтрШаблон("Необходимо заполнить процент условия оплаты для сотрудника %1", ВКМ_Специалист);
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Поле = "ИмяПоляФормы";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.КлючДанных = ЭтотОбъект.Ссылка;
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор,
	|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|	И ВКМ_ОбслуживаниеКлиента.ВКМ_Договор = &ВКМ_Договор";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВКМ_Договор", ВКМ_Договор);

	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;

	СтоимостьЧаса = 0;
	ЧасыКОплате = 0;
	СуммаКОплатеКлиенту = 0;
	СуммаКОплатеСотруднику = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтоимостьЧаса = Выборка.ВКМ_СтоимостьЧасаРаботы;
	КонецЦикла;
	
	Для Каждого ТекСтрокаВКМ_ВыполненныеРаботы из ВКМ_ВыполненныеРаботы Цикл
		
		ЧасыКОплате = ЧасыКОплате + Число(ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту);
		
	КонецЦикла;
	
	СуммаКОплатеКлиенту = СтоимостьЧаса * ЧасыКОплате;
	СуммаКОплатеСотрудникуБезНДФЛ = ЧасыКОплате * СтоимостьЧаса * НайденнаяЗапись.ПроцентОтРабот / 100;
	СуммаКОплатеСотруднику = СуммаКОплатеСотрудникуБезНДФЛ - (СуммаКОплатеСотрудникуБезНДФЛ * НДФЛ / 100);

	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.ВКМ_Клиент = ВКМ_Клиент;
	Движение.ВКМ_Договор = ВКМ_Договор;
	Движение.ВКМ_КоличествоЧасов = ЧасыКОплате;
	Движение.ВКМ_СуммаКОплате = СуммаКОплатеКлиенту;
	
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.ВКМ_Сотрудник = ВКМ_Специалист;
	Движение.ВКМ_ЧасовКОплате = ЧасыКОплате;
	Движение.ВКМ_СуммаКОплате = СуммаКОплатеСотруднику;
	
	Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
	Движение.ПериодРегистрации = Дата;
	Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Процент;
	Движение.ВКМ_Сотрудник = ВКМ_Специалист;
	Движение.ВКМ_Показатель = СуммаКОплатеСотрудникуБезНДФЛ;
	Движение.ВКМ_Результат = СуммаКОплатеСотруднику;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
    	Возврат;
	КонецЕсли;
	
	ДанныеДляУведомления = Новый Структура("НовыйДокумент, Дата, Время, Специалист");

	Если Не ЭтоНовый() Тогда 
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяНачалаРабот КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяОкончанияРабот КАК ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_ДатаПроведенияРабот КАК ДатаПроведенияРабот
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 

		Запрос.УстановитьПараметр("Ссылка", Ссылка); 

		Результат = Запрос.Выполнить(); 
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда 
			ДатаДокумента = Выборка.ДатаПроведенияРабот; 
			ВремяНачалоДокумента = Выборка.ВремяНачалаРабот;
			ВремяКонецДокумента = Выборка.ВремяОкончанияРабот;
			СпециалистДок = Выборка.Специалист;
		КонецЕсли;
		
		ДанныеДляУведомления.НовыйДокумент = "Не новый документ";
		
	Иначе
		
		ДанныеДляУведомления.НовыйДокумент = "Новый документ";
		
	КонецЕсли; 

	Если ДатаДокумента <> ВКМ_ДатаПроведенияРабот Тогда 
		ДанныеДляУведомления.Дата = "Дата изменена"; 
	Иначе
		ДанныеДляУведомления.Дата = "Дата не изменена"; 
	КонецЕсли;
	
	Если ВремяНачалоДокумента <> ВКМ_ВремяНачалаРабот ИЛИ ВремяКонецДокумента <> ВКМ_ВремяОкончанияРабот Тогда 
		ДанныеДляУведомления.Время = "Время изменено";
	Иначе
		ДанныеДляУведомления.Время = "Время не изменено";
	КонецЕсли;
	
	Если СпециалистДок <> ВКМ_Специалист Тогда 
		ДанныеДляУведомления.Специалист = "Специалист изменен"; 
	Иначе
		ДанныеДляУведомления.Специалист = "Специалист не изменен"; 
	КонецЕсли;
	
	СозданиеУведомления(ДанныеДляУведомления);
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверкаУсловийОплатыСотрудников(ДатаДокумента, Сотрудник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад КАК Оклад,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ПроцентОтРабот
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, ВКМ_Сотрудник = &Сотрудник) КАК
	|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	УсловияОплаты = Новый Структура;
	УсловияОплаты.Вставить("ЗаписьЕсть", Ложь);
	
	Пока Выборка.Следующий() Цикл
		УсловияОплаты.Вставить("ЗаписьЕсть", Истина);
		УсловияОплаты.Вставить("ПроцентОтРабот", Выборка.ПроцентОтРабот);
	КонецЦикла;
	
	Возврат УсловияОплаты;
	
КонецФункции

Функция СозданиеУведомления(ДанныеДляУведомления) Экспорт
	
	СправочникУведомлений = Справочники.ВКМ_УведомленияТелеграмБоту;
	НовоеУведомление = СправочникУведомлений.СоздатьЭлемент();
	ТекстУведомления = СтрШаблон("В документе Обслуживание клиента № %1 от %2 были внесены изменения!", Номер, Дата);
	
	Если ДанныеДляУведомления.НовыйДокумент = "Новый документ" Тогда
		ТекстУведомления = СтрШаблон("Создан новый документ Обслуживание клиента № %1 от %2.", Номер, Дата);
	КонецЕсли;
	
	Если ДанныеДляУведомления.Дата = "Дата изменена" Тогда
		ТекстУведомления = ТекстУведомления + " Изменено поле Дата.";
	КонецЕсли;
	
	Если ДанныеДляУведомления.Время = "Время изменено" Тогда
		ТекстУведомления = ТекстУведомления + " Изменено поле Время работ.";
	КонецЕсли;
	
	Если ДанныеДляУведомления.Специалист = "Специалист изменен" Тогда
		ТекстУведомления = ТекстУведомления + " Изменено поле Специалист.";
	КонецЕсли;
	 
	НовоеУведомление.ВКМ_ТекстСообщения = ТекстУведомления;
	
	Попытка
		НовоеУведомление.Записать();
		Возврат 1;
    Исключение
		Возврат 0;
    КонецПопытки;
	
КонецФункции

#КонецОбласти

#КонецЕсли